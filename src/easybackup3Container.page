Menu="easybackup:4"
Title="Container"
Icon="clone"
---

<?php

$docker = new Docker();
$container_list = $docker->getContainers();
?>

<form action="" id="container_ignore_form" onsubmit="return false;">
    <input type="hidden" name="action" value="ignore_container">
    <?php if(!Config::$ENABLE_APPDATA_BACKUP): ?>

        <div class='notice shift'><?=_(LANG_GUI_SECURITYNOTE_VMBACKUPDISABLED)?></div>

    <?php endif; ?>
    <table class="disk_status wide">
        <thead>
            <tr>
                <td style="width: 10px; text-align:center;"><?=_(LANG_GUI_TABLE_COL_DISABLE)?></td>
                <td><?=_(LANG_GUI_TABLE_COL_NAME)?></td>
                <td><?=_(LANG_GUI_TABLE_COL_LASTBACKUP)?></td>
                <td><?=_(LANG_GUI_TABLE_COL_BACKUPCOUNT)?></td>
                <td><?=_(LANG_GUI_TABLE_COL_BACKUPSIZE)?></td>
                <td><?=_(LANG_GUI_TABLE_COL_ACTIONS)?></td>
            </tr>
        </thead>
        <tbody>
            <?php 
                foreach($container_list as $key => $container): 
                    $backups = $container->getStoredBackups();
                    $backup_size = 0;
                    $last_backup = 'never';

                    if(count($backups)>0) {
                        $backups[array_key_last($backups)]['Timestamp'];
                    }

                    foreach($backups as $backup) {
                        $backup_size += $backup['Size'];
                    }
            ?>
            <tr style="background-color: #272927;">
                <td style="width: 10px; text-align:center;">
                    <input 
                        type="checkbox" 
                        name="disable_container[]" 
                        value="<?=$container->name?>" <?= (in_array($container->name, Config::$APPDATA_IGNORE_CONTAINER) ? 'checked' : '') ?>>
                </td>
                <td>
                    <img src="<?=$container->icon?>" style="max-height: 30px" alt="">
                    <?php
                        if(in_array($container->name, Config::$APPDATA_IGNORE_CONTAINER)) {
                            echo '<a style="text-decoration: line-through; cursor: pointer;" href="javascript: void(0);" onclick="toggle_block(\'block1-vm-'.$key.'\');toggle_block(\'block2-vm-'.$key.'\');">'.$container->name.'</a>';
                        } else {
                            echo '<a style="cursor: pointer;" javascript: void(0); onclick="toggle_block(\'block1-vm-'.$key.'\');toggle_block(\'block2-vm-'.$key.'\');">'.$container->name.'</a>';
                        }
                    ?>
                    <span 
                        style="color: red; display: none;" 
                        id="view3_text_running_<?=$container->id?>">backup is running</span>
                    <span 
                        style="color: red; display: none;" 
                        id="view3_text_runningtime_<?=$container->id?>">[time]</span>
                </td>
                <td><?=$last_backup?></td>
                <td><?=count($backups)?></td>
                <td><?=convertSize($backup_size)?></td>
                <td>
                    <button 
                        id="view3_btn_backupnow_<?=$container->id?>" 
                        onclick="backupnow_container('<?=$container->name?>')" 
                    ><?=_(LANG_GUI_BTN_BACKUPNOW)?></button></td>
            </tr>
            <?php 
                foreach($container->mounts as $mount): 
                    if($mount['Type'] != 'bind') { continue; }
            ?>
            <tr class="wrapper block1-vm-<?=$key?>">
                <td style="width: 10px; text-align:center;">
                    
                </td>
                <td colspan="5">
                    <input 
                        type="checkbox" 
                        name="disable_bind[]" 
                        value="<?=$mount['Source']?>" <?= (in_array($mount['Source'], Config::$APPDATA_IGNORE_BINDES) ? 'checked' : '') ?>>
                    <?php
                        if(in_array($mount['Source'], Config::$APPDATA_IGNORE_BINDES)) {
                            echo '<span style="text-decoration: line-through">' . $mount['Source'] . '</span>';
                        } else {
                            echo '<span>' . $mount['Source'] . '</span>';
                        }
                    ?>
                    <?php
                        if(!$mount['RW']) {
                            echo '<p style="color: orange">This bind is not writable. Are you sure that a backup is necessary?</p>';
                        }
                        if(strpos($mount['Source'], '/mnt/user/appdata/') !== 0 && !in_array($mount['Source'], Config::$APPDATA_IGNORE_BINDES)) {
                            echo '<p style="color: orange">This bind is not part of the appdata. Are you sure that a backup is necessary?</p>';
                        }
                        /*
                        if(in_array($mount['Source'], Config::$APPDATA_IGNORE_BINDES)) {
                            echo '<span class="tag orange">Disabled</span>';
                        }
                        */
                    ?>
                </td>
            </tr>
            <?php endforeach; ?>
            <?php foreach($backups as $backup): ?>
            <tr class="wrapper block2-vm-<?=$key?>" style="display: none;">
                <td style="width: 10px; text-align:center;"></td>
                <td colspan="3">
                    <?php
                        $filterd = array_filter($timeranges, function ($e) use($backup) {
                            return $backup['TimestampUnix'] <= $e['end'] && $backup['TimestampUnix'] >= $e['start'];
                        });
                        $filterd = array_values($filterd);

                        if(count($filterd) > 0) {
                            echo ' <span class="tag fl '.$filterd[0]['type'].'" style="margin-right: 10px;">' . _(LANG_GUI_BACKUPTIMES[$filterd[0]['type']]) . '</span>';
                        }
                    ?>
                    <?=date(LANG_GUI_DATETIMEFORMAT, $backup['TimestampUnix']);?> - <?=$backup['BackupType']?>
                </td>
                <td style="text-align: right;"><?=convertSize($backup['Size'])?></td>
                <td style="text-align: right;">
                    <?php if(is_file($backup['FullPath'])): ?>
                    <button 
                        onclick="deleteBackup('<?=$backup['FullPath']?>');"
                    ><?=_(LANG_GUI_BTN_DELETE)?></button>
                    <?php endif; ?>
                    <button
                        disabled
                        onclick="return true;"
                        class="view3_btn_restore_<?=$container->id?>"
                    ><?=_(LANG_GUI_BTN_RESTORE)?></button>
                </td>
            </tr>
            <?php endforeach; ?>
            <?php endforeach; ?>
        </tbody>
    </table>
</form>
<button onClick="save_container_ignore_backup()"><?=_(LANG_GUI_BTN_SAVE)?></button>
<script>

    function save_container_ignore_backup(){
        loading_view3(true);
        $.post('/plugins/easybackup/actions.php', $("#container_ignore_form").serialize(), (data) => {
            if(data == 'OK') {
                location.reload();
            }
            loading_view3(false);
        });
    };

    function backupnow_container(container){
        loading_view2(true);
        $.post('/plugins/easybackup/actions.php', {action: 'backupnow_container', container: container}, (data) => {
            if(data == 'OK') {
                //location.reload();
            }
            loading_view2(false);
        });
        
    }

    function loading_view3(type) {
        if(type) {
            $('#spinnerbg_view3').css('display', 'block');
            $('#spinner_view3').css('display', 'block');
        } else {
            $('#spinnerbg_view3').css('display', 'none');
            $('#spinner_view3').css('display', 'none');
        }
    }

    setInterval(() => {
        $.each(container_state,(i, e) => {

            if(e.job_type === 'backup') {
                $('#view3_text_running_' + e.id).show();
                $('#view3_text_runningtime_' + e.id).show();
                $('#view3_text_runningtime_' + e.id).html(e.job_timediff_iso);
                $('#view3_btn_backupnow_' + e.id).prop('disabled', true);
            } else {
                $('#view3_text_running_' + e.id).hide();
                $('#view3_text_runningtime_' + e.id).hide();
                $('#view3_btn_backupnow_' + e.id).prop('disabled', false);
            }

            if(e.state != 'shut off' || e.job_type === 'backup' || e.job_type === 'restore') {
                $('.view3_btn_restore_' + e.id).prop('disabled', true);
            } else {
                $('.view3_btn_restore_' + e.id).prop('disabled', false);
            }

        });
    }, 1000);

</script>

<div id="spinnerbg_view3" style="position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; background-color: rgba(0,0,0,0.5); z-index: 6000; display: none;"></div>
<div id="spinner_view3" class="spinner fixed">
    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 133.52 76.97" class="unraid_mark">
        <defs>
            <linearGradient id="unraid_logo" x1="23.76" y1="81.49" x2="109.76" y2="-4.51" gradientUnits="userSpaceOnUse">
                <stop offset="0" stop-color="#e32929"></stop>
                <stop offset="1" stop-color="#ff8d30"></stop>
            </linearGradient>
        </defs>
        <path d="m70,19.24zm57,0l6.54,0l0,38.49l-6.54,0l0,-38.49z" fill="url(#unraid_logo)" class="unraid_mark_9"></path>
        <path d="m70,19.24zm47.65,11.9l-6.55,0l0,-23.79l6.55,0l0,23.79z" fill="url(#unraid_logo)" class="unraid_mark_8"></path>
        <path d="m70,19.24zm31.77,-4.54l-6.54,0l0,-14.7l6.54,0l0,14.7z" fill="url(#unraid_logo)" class="unraid_mark_7"></path>
        <path d="m70,19.24zm15.9,11.9l-6.54,0l0,-23.79l6.54,0l0,23.79z" fill="url(#unraid_logo)" class="unraid_mark_6"></path>
        <path d="m63.49,19.24l6.51,0l0,38.49l-6.51,0l0,-38.49z" fill="url(#unraid_logo)" class="unraid_mark_5"></path>
        <path d="m70,19.24zm-22.38,26.6l6.54,0l0,23.78l-6.54,0l0,-23.78z" fill="url(#unraid_logo)" class="unraid_mark_4"></path>
        <path d="m70,19.24zm-38.26,43.03l6.55,0l0,14.73l-6.55,0l0,-14.73z" fill="url(#unraid_logo)" class="unraid_mark_3"></path>
        <path d="m70,19.24zm-54.13,26.6l6.54,0l0,23.78l-6.54,0l0,-23.78z" fill="url(#unraid_logo)" class="unraid_mark_2"></path>
        <path d="m70,19.24zm-63.46,38.49l-6.54,0l0,-38.49l6.54,0l0,38.49z" fill="url(#unraid_logo)" class="unraid_mark_1"></path>
    </svg>
</div>